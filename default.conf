
map $request_method $methloggable {
       # volatile;
#default       $statusloggable;
default       0;
POST          1;
OPTIONS       1;
GET           1;
PUT           1;

}
map $http_user_agent $ualoggable {
       # volatile;

~Pingdom 0;
~Amazon-Route53 0;
~kube-check 0;
default $methloggable;

}
map $status $statusloggable {
        #volatile;
#    ~^[36789]  0;
    200         0;
    301         0;
    302         0;
    499         0; ## client disconnected → HTTP/1.1" 499 → uptime monitors will quit on first keyword and produce tons of 499
    default    $ualoggable;
}
map $request_uri $urlregxloggable {
      #  volatile;
    (.*?)healthcheck(.*?) 0;
    (.*?)ip_info(.*?)     1;
    default $statusloggable;
    }
map $request_uri $loggable {
  /ping                      0;
  /healthcheck.html          0;
  /healthcheck               0;
  /healthcheck_full          1;
  /ip_info                   1;
  /ip_info_json              1;
  /webmentions/pingback      1;
  /webmentions/receive       1;

  default $urlregxloggable;
}

map $status $errorloggable {
    499        0; ## client disconnected → HTTP/1.1" 499 → uptime monitors will quit on first keyword and produce tons of 499
    default    1;
}
access_log    /dev/stdout main if=$loggable;
#error_log    /dev/stderr warn if=$errorloggable;
error_log    /dev/stderr warn ;

server {

    location @failjs { add_header Content-Type application/javascript;    return 200 ' ';    access_log off;  }

    include mime.types;
    include /etc/nginx-realip.conf;
    types
    {
        application/javascript mjs;
    }
    listen 8080;
    server_name _;

    proxy_set_header    X-Real-IP               $remote_addr;
    proxy_set_header    Host                    $host;
    proxy_set_header    X-Forwarded-For         $proxy_add_x_forwarded_for;
    proxy_set_header    X-Forwarded-Proto       $scheme;

    client_max_body_size 32M;


#    error_log   syslog:server=unix:/dev/log;
#    access_log  syslog:server=unix:/dev/log;
#    error_log   /dev/stderr;
#    access_log  /dev/stdout;


##location /api/ {
##
##    set $upstream_app 127.0.0.1;
##    set $upstream_port 8081;
##    set $upstream_proto http;
##    proxy_pass $upstream_proto://$upstream_app:$upstream_port;
##    proxy_http_version 1.1;
##    proxy_set_header Upgrade $http_upgrade;
##    proxy_set_header Connection "Upgrade";
##    #rewrite /api(.*) $1 break;
##}

location ~ ^/mail/(css|js)/(.*) {
    access_log off;    set $upstream_proto http;set $upstream_app 127.0.0.1;    set $upstream_port 8025;
    proxy_pass $upstream_proto://$upstream_app:$upstream_port;
    proxy_http_version 1.1;    proxy_set_header Upgrade $http_upgrade;    proxy_set_header Connection "Upgrade";
    rewrite /mail(.*) $1 break;
}

location ~ ^/mail/(.*) {
    auth_basic           "Administrator’s Area";    auth_basic_user_file /srv/htpass.mail;
    set $upstream_proto http;set $upstream_app 127.0.0.1;    set $upstream_port 8025;
    proxy_pass $upstream_proto://$upstream_app:$upstream_port;
    proxy_http_version 1.1;    proxy_set_header Upgrade $http_upgrade;    proxy_set_header Connection "Upgrade";
    rewrite /mail(.*) $1 break;
}


location = /favicon.ico          {    return 301 https://the-foundation.gitlab.io/favicon.ico; access_log off; }

location /web/    { root /srv;
include /etc/nginx-cors.conf;
}
location = /mail  { return 302 $scheme://$host/mail/ ; }


location ~ /webmentions/pingback$  {
access_log    /dev/stdout main;
add_header Access-Control-Allow-Origin *;
rewrite /webmentions/pingback /webmentions/pingback.php;
}

location ~ /webmentions/receive$ {
    access_log    /dev/stdout main if=$loggable;
    include /etc/nginx-cors.conf;
    proxy_pass http://127.0.0.1:8023;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    rewrite /webmentions(.*) $1 break;
}
location ~ /webmentions/get$ {
    access_log    /dev/stdout main;
    include /etc/nginx-cors.conf;
    proxy_pass http://127.0.0.1:8023;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    rewrite /webmentions(.*) $1 break;
}

## append slashes
location =   /webmentions          {    return 302 $scheme://$host/webmentions/ui/;      access_log off;include /etc/nginx-cors.conf; }
location =   /webmentions/ui       {    return 302 $scheme://$host/webmentions/ui/;      access_log off;include /etc/nginx-cors.conf; }
location =   /webmentions/css      {    return 302 $scheme://$host/webmentions/ui/css/;  access_log off;include /etc/nginx-cors.conf; }
location =   /webmentions/ui/dist  {    return 302 $scheme://$host/webmentions/ui/dist/; access_log off;include /etc/nginx-cors.conf; }
## static for assets
location  ~ ^/webmentions/ui/dist/ { access_log /dev/stdout;    root /var/lib/webmentiond/frontend/ ; rewrite /webmentions/ui/(.*) /$1 break  ; }
location  ~ ^/webmentions/ui/css/  { access_log off;            root /var/lib/webmentiond/frontend/css/  ; rewrite /webmentions/ui/css/(.*)  /$1 break; }


location  /webmentions/ui/fontawesome/  {
    root   /var/lib/webmentiond/frontend/fontawesome/  ;
    rewrite /webmentions/ui/fontawesome/(.*)  /$1 break;
    location ~* \.(js|mjs)$ {                try_files $uri @failjs; }
    location ~* \.(png|jpg|jpeg|gif|ico)$ {                expires max;                log_not_found off;        }
}

location  ~ ^/webmentions/ui/  {
      access_log    /dev/stdout main ;
      auth_basic           "Administrator’s Area";    auth_basic_user_file /srv/htpass.webmentions;
      proxy_pass http://127.0.0.1:8023; rewrite /webmentions/(.*)  /$1 break ; }

location ~ /uptime$  {
add_header Access-Control-Allow-Origin *;
rewrite /uptime /uptime.php;
}

location ~ \.php$ {
  root /var/www/;
  fastcgi_split_path_info ^(.+\.php)(/.+)$;
              fastcgi_pass      127.0.0.1:9000;
              fastcgi_index     index.php;
              include           fastcgi_params;
             fastcgi_param   SCRIPT_FILENAME  $document_root$fastcgi_script_name;
}

# Prevent people from grabbing the exposed Prometheus
# metrics:
location /webmentions/metrics  { return 404 "NOPE"  ; }

location ~ /webmentions/(.*) {
    include /etc/nginx-cors.conf;
    proxy_pass http://127.0.0.1:8023;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    rewrite /webmentions(.*) $1 break;
}
location = /healthcheck  { add_header Access-Control-Allow-Origin *;    add_header Content-Type text/plain;    return 200 'OK=ALIVE';    access_log off;     }
location = /ping         { add_header Access-Control-Allow-Origin *;    add_header Content-Type text/plain;    return 200 'OK=ALIVE';    access_log off;     }
location = /             { return 302 $scheme://$host/ping  ; }
location   / {
include /etc/nginx-cors.conf;
    set $upstream_app 127.0.0.1;
    set $upstream_port 8081;
    set $upstream_proto http;
    proxy_pass $upstream_proto://$upstream_app:$upstream_port;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    #rewrite /api(.*) $1 break;
}

location = /robots.txt {    add_header Access-Control-Allow-Origin *;    add_header Content-Type text/plain;       return 200 "User-agent: *\nDisallow: /\n" ;
                            #access_log off;
}
location = /sitemap.xml {    add_header Access-Control-Allow-Origin *;    add_header Content-Type text/plain;    return 200 ' ';    access_log off;     }


    location ~ /\. {
        deny all;
    }
}
