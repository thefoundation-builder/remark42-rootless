server {
    if ($request_method = 'OPTIONS') {
#        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Origin'  "$http_origin";
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        #
        # Custom headers and headers various browsers *should* be OK with but aren't
        #
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        #
        # Tell client that this pre-flight info is valid for 20 days
        #
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain; charset=utf-8';
        add_header 'Content-Length' 0;
        return 204;
     }
     if ($request_method = 'POST') {
#        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Origin'  "$http_origin" always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
     }
     if ($request_method = 'GET') {
#        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Origin'  "$http_origin" always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
     }
    location @failjs { add_header Content-Type application/javascript;    return 200 ' ';    access_log off;  }

    include mime.types;
    types 
    {
        application/javascript mjs;
    }
    listen 8080;
    server_name _;

    proxy_set_header    X-Real-IP               $remote_addr;
    proxy_set_header    Host                    $host;
    proxy_set_header    X-Forwarded-For         $proxy_add_x_forwarded_for;
    proxy_set_header    X-Forwarded-Proto       $scheme;

    client_max_body_size 32M;


#    error_log   syslog:server=unix:/dev/log;
#    access_log  syslog:server=unix:/dev/log;
    error_log   /dev/stderr;
    access_log  /dev/stdout;


##location /api/ {
##
##    set $upstream_app 127.0.0.1;
##    set $upstream_port 8081;
##    set $upstream_proto http;
##    proxy_pass $upstream_proto://$upstream_app:$upstream_port;
##    proxy_http_version 1.1;
##    proxy_set_header Upgrade $http_upgrade;
##    proxy_set_header Connection "Upgrade";
##    #rewrite /api(.*) $1 break;
##}

location ~ ^/mail/(css|js)/(.*) {    
    access_log off;    set $upstream_proto http;set $upstream_app 127.0.0.1;    set $upstream_port 8025;
    proxy_pass $upstream_proto://$upstream_app:$upstream_port;
    proxy_http_version 1.1;    proxy_set_header Upgrade $http_upgrade;    proxy_set_header Connection "Upgrade";
    rewrite /mail(.*) $1 break;
}

location ~ ^/mail/(.*) {
    auth_basic           "Administrator’s Area";    auth_basic_user_file /srv/htpass.mail;
    set $upstream_proto http;set $upstream_app 127.0.0.1;    set $upstream_port 8025;
    proxy_pass $upstream_proto://$upstream_app:$upstream_port;
    proxy_http_version 1.1;    proxy_set_header Upgrade $http_upgrade;    proxy_set_header Connection "Upgrade";
    rewrite /mail(.*) $1 break;
}


location = /favicon.ico          {    return 301 https://the-foundation.gitlab.io/favicon.ico; access_log off; }

location /web/    { root /srv; }
location = /mail  { return 302 $scheme://$host/mail/ ; }
     
## append slashes
location = /webmentions          {    return 302 $scheme://$host/webmentions/ui/;      access_log off;  }
location = /webmentions/ui       {    return 302 $scheme://$host/webmentions/ui/;      access_log off;  }
location = /webmentions/css      {    return 302 $scheme://$host/webmentions/ui/css/;  access_log off;  }
location = /webmentions/ui/dist  {    return 302 $scheme://$host/webmentions/ui/dist/; access_log off;  }
## static for assets
location  ~ ^/webmentions/ui/dist/ { access_log /dev/stdout;    root /var/lib/webmentiond/frontend/ ; rewrite /webmentions/ui/(.*) /$1 break  ; }
location  ~ ^/webmentions/ui/css/  { access_log off;            root /var/lib/webmentiond/frontend/css/  ; rewrite /webmentions/ui/css/(.*)  /$1 break; }


location   /webmentions/ui/fontawesome/  {
    root /var/lib/webmentiond/frontend/fontawesome/  ;
    rewrite /webmentions/ui/fontawesome/(.*)  /$1 break;
    location ~* \.(js|mjs)$ {                try_files $uri @failjs; }
    location ~* \.(png|jpg|jpeg|gif|ico)$ {                expires max;                log_not_found off;        }
}

location  ~ ^/webmentions/ui/  { 
      access_log /dev/stdout;  
      auth_basic           "Administrator’s Area";    auth_basic_user_file /srv/htpass.webmentions;
      proxy_pass http://127.0.0.1:8023; rewrite /webmentions/(.*)  /$1 break ; }

location ~ /webmentions/pingback$  {
add_header Access-Control-Allow-Origin *;
rewrite /webmentions/pingback /webmentions/pingback.php;
}

location ~ \.php$ {
  root /var/www/;
  fastcgi_split_path_info ^(.+\.php)(/.+)$;
              fastcgi_pass      127.0.0.1:9000;
              fastcgi_index     index.php;
              include           fastcgi_params;
             fastcgi_param   SCRIPT_FILENAME  $document_root$fastcgi_script_name;
}

# Prevent people from grabbing the exposed Prometheus
# metrics:
location /webmentions/metrics  { return 404 "NOPE"  ; }

location ~ ^/webmentions/(.*) {
    proxy_pass http://127.0.0.1:8023;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    rewrite /webmentions(.*) $1 break;
}

location = /ping {    add_header Access-Control-Allow-Origin *;    add_header Content-Type text/plain;    return 200 'OK=ALIVE';    access_log off;     }
location = /      { return 302 $scheme://$host/ping  ; }
location   / {

    set $upstream_app 127.0.0.1;
    set $upstream_port 8081;
    set $upstream_proto http;
    proxy_pass $upstream_proto://$upstream_app:$upstream_port;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    #rewrite /api(.*) $1 break;
}

location = /robots.txt {    add_header Access-Control-Allow-Origin *;    add_header Content-Type text/plain;       return 200 "User-agent: *\nDisallow: /\n" ; 
                            #access_log off;     
}
location = /sitemap.xml {    add_header Access-Control-Allow-Origin *;    add_header Content-Type text/plain;    return 200 ' ';    access_log off;     }


    location ~ /\. {
        deny all;
    }
}
